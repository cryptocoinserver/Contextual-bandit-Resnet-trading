# -*- coding: utf-8 -*-
"""plotting_RSLSTM-A_ESWA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cOncdfFHcTAVf_txJngh_BijeJsycair
"""

import matplotlib
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns

from google.colab import drive
drive.mount('/content/drive')

path = '/content/drive/MyDrive/USP/Doutorado/Artigo RRL-DeepLearning/Results/'

"""Use this paths to plot the graphs using considering comission (0.001)"""

list_paths = ['results - RRL;DQL;A2C;BSTS;RESNET;BTC TC0.001/',
              'results - RRL;DQL;A2C;BSTS;RESNET;DASH TC0.001/',
              'results - RRL;DQL;A2C;BSTS;RESNET;ETH TC0.001/',
              'results - RRL;DQL;A2C;BSTS;RESNET;LTC TC0.001/',
              'results - RRL;DQL;A2C;BSTS;RESNET;NXT TC0.001/',
              'results - RRL;DQL;A2C;BSTS;RESNET;XMR TC0.001/']

"""Use this paths to plot the graphs using that considers zeros cost"""

list_paths = ['results - RRL;DQL;A2C;BSTS;RESNET;BTC - bigger dataset/',
              'results - RRL;DQL;A2C;BSTS;RESNET;DASH - bigger dataset/',
              'results - RRL;DQL;A2C;BSTS;RESNET;ETH - bigger dataset/',
              'results - RRL;DQL;A2C;BSTS;RESNET;LTC - bigger dataset/',
              'results - RRL;DQL;A2C;BSTS;RESNET;NXT/',
              'results - RRL;DQL;A2C;BSTS;RESNET;XMR - bigger dataset/']

list_assets = ['btc','dash','eth','ltc','nxt','xmr']

import numpy as np
import matplotlib.pyplot as plt

w = 10
h = 10
fig = plt.figure(figsize=(20, 10))
columns = 3
rows = 2
# ax enables access to manipulate each of subplots
ax = []

for i in range(columns*rows):

  # create subplot and append to ax
  ax.append( fig.add_subplot(rows, columns, i+1) )
  fold = '_'
  asset_name = list_assets[i]
  PATH = path+list_paths[i]
  DQN = np.cumsum(np.load(PATH+'DQN_agent_returns_'+str(fold)+'_'+asset_name+'.npy'))
  RRL = np.cumsum(np.load(PATH+'RRL_model_returns_f'+str(fold)+'_'+asset_name+'.npy'))
  A2C = np.cumsum(np.load(PATH+'A2C_agent_returns'+str(fold)+'_'+asset_name+'.npy'))
  BSTS = np.cumsum(np.load(PATH+'cbadapt_agent_returns'+str(fold)+'_'+asset_name+'.npy'))
  RESNET = np.cumsum(np.load(PATH+'resnet_agent_returns'+str(fold)+'_'+asset_name+'.npy'))
  BH = np.cumsum(np.load(PATH+'bh_'+str(fold)+'_'+asset_name+'.npy'))
  #fig = plt.figure(figsize=(17,6))
  plt.plot(DQN, 'k', color='grey',linestyle='-',markevery = 140,marker = 'o',label = 'DQL')
  plt.plot(RRL, 'k', color='grey',linestyle='-',markevery = 140,marker = '<',label = 'RRL')
  plt.plot(A2C, 'k', color='grey',linestyle='-',markevery = 140,marker = 'x',label = 'A2C')
  plt.plot(BSTS, 'k', color='grey',linestyle='-',markevery = 140,marker = 'd',label = 'BTS')
  plt.plot(RESNET, 'k', color='green',linestyle='-.',label = 'RSLSTM-A')
  plt.plot(BH, 'k', color='red',label = 'B&H')
  plt.title('Asset: '+asset_name)
  plt.legend()
  if i == 0 or i == 3:
    plt.ylabel('Profit and Loss')
  plt.xlabel('Time steps')
  #plt.imshow(img, alpha=0.25)
#plt.savefig(path +'results - tables;crypto;extended datas/'+'test_all_assets.pdf', bbox_inches='tight')
plt.savefig(path +'results - tables;crypto;extended datas/'+'test_all_assets_with_costs.pdf', bbox_inches='tight')



"""## Plotting Resnet different future windowns"""

path = '/content/drive/MyDrive/USP/Doutorado/Artigo RRL-DeepLearning/Results/results - BTC future window exploration'
windowns = [5,10,20,30,40,50,60,70,80,90,100]
asset_name = 'btc'
t = 0.1
increment = (2.0 - t)/len(windowns)
fig = plt.figure(figsize=(5, 5))
for window in windowns:
  returns = np.cumsum(np.load(path+'/resnet_agent_returns_'+str(window)+'_'+asset_name+'.npy'))
  print(returns[-1])
  col = (t/2.0, t/2.0, t/2.0)
  plt.plot(returns, 'k', color=col,linestyle='-',label = str(window))
  t = t + increment
#plt.title('Different results considering different future windown sizes')
plt.ylabel('Profit and Loss')
plt.xlabel('Time steps')
plt.legend()
plt.savefig(path +'/window_size_variation.pdf', bbox_inches='tight')

increment

